// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.1
// Source: user.proto

package userservice

import (
	"context"

	"github.com/uwu-octane/antBackend/api/v1/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PingReq  = user.PingReq
	PingResp = user.PingResp

	UserService interface {
		Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PingResp, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

func (m *defaultUserService) Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PingResp, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
