syntax = "v1"

info (
	title: "Gateway"
	desc:  "Auth Gateway (Access校验 + 认证路由入口)"
)

type (
	LoginReq {
		Username string `json:"username"`
		Password string `json:"password"`
	}
	LoginResp {
		AccessToken string `json:"access_token"`
		SessionId   string `json:"session_id"`
		ExpiresIn   int64  `json:"expires_in"`
		TokenType   string `json:"token_type"`
	}
	UserInfoResp {
		UserId      string `json:"user_id"`
		Username    string `json:"username"`
		Email       string `json:"email"`
		DisplayName string `json:"display_name"`
		AvatarUrl   string `json:"avatar_url"`
	}
	MeResp {
		Uid string `json:"uid"`
		Jti string `json:"jti"`
		Iat int64  `json:"iat"`
	}
	EmptyResp  {}
	LogoutResp {
		Ok      bool   `json:"ok"`
		Message string `json:"message"`
	}
)

@server (
	prefix: /api/v1
	group:  auth
)
service gateway {
	@handler Ping
	get /ping returns (EmptyResp)

	@handler Login
	post /login (LoginReq) returns (LoginResp)

	// using cookie(sid) to refresh
	@handler Refresh
	post /refresh returns (LoginResp)

	@handler Me
	get /me returns (MeResp)

	// using cookie(sid) to logout, no request body
	@handler Logout
	post /logout returns (LogoutResp)

	// using cookie(sid) to logout all, no request body
	@handler LogoutAll
	post /logout-all returns (LogoutResp)
}

@server (
	prefix: /api/v1
	group:  user
)
service gateway {
	@handler GetUserInfo
	get /user/info returns (UserInfoResp)
}

