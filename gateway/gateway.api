syntax = "v1"

info (
	title: "Gateway"
	desc:  "Auth Gateway (Access校验 + 认证路由入口)"
)

type (
	LoginReq {
		Username string `json:"username"`
		Password string `json:"password"`
	}
	LoginResp {
		AccessToken  string `json:"access_token"`
		RefreshToken string `json:"refresh_token"`
		ExpiresIn    int64  `json:"expires_in"`
		TokenType    string `json:"token_type"`
	}
	RefreshReq {
		RefreshToken string `json:"refresh_token"`
	}
	// GetUserInfoReq {
	//  UserId string `json:"user_id"`
	// }
	UserInfoResp {
		UserId      string `json:"user_id"`
		Username    string `json:"username"`
		Email       string `json:"email"`
		DisplayName string `json:"display_name"`
		AvatarUrl   string `json:"avatar_url"`
	}
	MeResp {
		Uid string `json:"uid"`
		Jti string `json:"jti"`
		Iat int64  `json:"iat"`
	}
	EmptyResp  {}
	LogoutResp {
		Ok      bool   `json:"ok"`
		Message string `json:"message"`
	}
	LogoutReq {
		RefreshToken string `json:"refresh_token"`
	}
	LogoutAllReq {
		RefreshToken string `json:"refresh_token"`
	}
)

@server (
	prefix: /api/v1
	group:  auth
)
service gateway {
	@handler Ping
	get /ping returns (EmptyResp)

	@handler Login
	post /login (LoginReq) returns (LoginResp)

	@handler Refresh
	post /refresh (RefreshReq) returns (LoginResp)

	@handler Me
	get /me returns (MeResp)

	@handler Logout
	post /logout (LogoutReq) returns (LogoutResp)

	@handler LogoutAll
	post /logout-all (LogoutAllReq) returns (LogoutResp)
}

@server (
	prefix: /api/v1
	group:  user
)
service gateway {
	@handler GetUserInfo
	get /user/info returns (UserInfoResp)
}

